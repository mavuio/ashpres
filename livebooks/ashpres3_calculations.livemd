# ashpres_3 calculations and aggregates

## Section

```elixir
alias MyApp.Rodent
import Ash.Query

rec =
  Rodent
  |> Ash.Query.limit(1)
  |> MyApp.Api.read_one!()
```

```elixir
# after adding:

# calculations do
# 
#     calculate(:full_name, :string, expr(nickname <> " " <> type(type, :string)))
# 
# end

# a) loads locally
rec |> Map.put(:nickname, "Hansi") |> MyApp.Api.load([:full_name])
```

```elixir
# c) loads within the data layer (ecto)

rec =
  Rodent
  |> Ash.Query.load([:full_name])
  |> MyApp.Api.read!()
  |> Kino.DataTable.new(keys: ~w(id nickname type full_name)a)
```
